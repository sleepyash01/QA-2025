{
	"info": {
		"_postman_id": "b6035b7f-5505-4d3e-856a-e8082da446aa",
		"name": "QA",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "46130409",
		"_collection_link": "https://hoz-7776233.postman.co/workspace/640ddae4-d593-4204-87cc-6ebe391df074/collection/46130409-b6035b7f-5505-4d3e-856a-e8082da446aa?action=share&source=collection_link&creator=46130409"
	},
	"item": [
		{
			"name": "Create Booking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const response = pm.response.json();\r",
							"pm.environment.set(\"ID\", response.bookingid);\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstname\" : \"hamd\",\r\n    \"lastname\" : \"test\",\r\n    \"totalprice\" : 111,\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : {\r\n        \"checkin\" : \"2018-01-01\",\r\n        \"checkout\" : \"2019-01-01\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}booking",
					"host": [
						"{{URL}}booking"
					]
				}
			},
			"response": []
		},
		{
			"name": "TOKEN",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const response = pm.response.json();\r",
							"pm.environment.set(\"TOKEN\", response.token);\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\" : \"admin\",\r\n    \"password\" : \"password123\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}auth",
					"host": [
						"{{URL}}auth"
					]
				}
			},
			"response": []
		},
		{
			"name": "PartialUpdate",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"const bookingId = parseInt(pm.request.url.toString().split('/').pop());\r",
							"const expectedFirstName = bookingId > 800 ? 'kamel' : 'mahmoud';\r",
							"const expectedLastName = bookingId > 800 ? 'oda' : 'jamal';\r",
							"\r",
							"const response = pm.response.json();\r",
							"\r",
							"pm.expect(response.firstname).to.equal(expectedFirstName);\r",
							"pm.expect(response.lastname).to.equal(expectedLastName);\r",
							"\r",
							"// Removed duplicate status code test\r",
							"// Test response time\r",
							"pm.test(\"Response time is less than 500ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});\r",
							"\r",
							"// Test response body structure\r",
							"pm.test(\"Response body structure is valid\", function () {\r",
							"    pm.expect(response).to.have.all.keys('firstname', 'lastname', 'totalprice', 'depositpaid', 'bookingdates', 'additionalneeds');\r",
							"    pm.expect(response.bookingdates).to.have.all.keys('checkin', 'checkout');\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "Cookie",
						"value": "token={{TOKEN}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstname\" : \"mahmoud\",\r\n    \"lastname\" : \"jamal\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}booking/{{ID}}",
					"host": [
						"{{URL}}booking"
					],
					"path": [
						"{{ID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "get booking by id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.eql(200);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{URL}}booking/{{ID}}",
					"host": [
						"{{URL}}booking"
					],
					"path": [
						"{{ID}}"
					]
				}
			},
			"response": []
		}
	]
}